"use strict";var e=require("typescript"),r=require("path"),t=require("fs"),o=require("perf_hooks");function n(e){var r=Object.create(null);return e&&Object.keys(e).forEach((function(t){if("default"!==t){var o=Object.getOwnPropertyDescriptor(e,t);Object.defineProperty(r,t,o.get?o:{enumerable:!0,get:function(){return e[t]}})}})),r.default=e,Object.freeze(r)}var i=n(e);const s=e=>{const r=[{limit:1024,suffix:"bytes",divisor:1},{limit:1048576,suffix:"KB",divisor:1024},{limit:1073741824,suffix:"MB",divisor:1048576},{limit:1/0,suffix:"GB",divisor:1073741824}].find((r=>e<r.limit));return`${(e/r.divisor).toFixed(2)} ${r.suffix}`};module.exports=class{projectDir;program;constructor(r){this.projectDir=r,this.program=e.createProgram([`${r}/src/**/*.ts`],{})}analyze(){const r=process.hrtime(),t=this.program.getSourceFiles();let o=0,n=0;t.forEach((r=>{const t=r.getLineAndCharacterOfPosition(r.getEnd()).line+1;o+=t;const i=this.program.getTypeChecker();e.forEachChild(r,(e=>{i.getTypeAtLocation(e)&&n++}))}));const[i,s]=process.hrtime(r),c=1e3*i+s/1e6;return{totalFiles:t.length,totalLines:o,totalTypes:n,typeCheckingTime:c,suggestions:this.generateSuggestions(n,c)}}generateSuggestions(e,r){const t=[];return r>1e3&&t.push("⏰ Consider splitting large files to reduce type-checking time"),e>1e4&&t.push("🧹 Try to simplify complex types or reduce the number of types."),t}async functionPerformance(e,n,c){let a=0,u="";const l=r.join(e,n);if(!t.existsSync(l))throw new Error(`File ${n} does not exist`);t.readFile(l,((e,r)=>{if(0===r.length)throw new Error(`File ${n} is empty`,e)}));try{const e=t.readFileSync(l,"utf8").split("\n");try{const r=((e,r)=>{let t="",o=!1,n=0;for(const i of e)if((i.includes(`async function ${r}`)||i.includes(`const ${r} = async`)||i.includes(`const ${r} = `))&&(o=!0),o&&(t+=i+"\n",i.includes("{")&&n++,i.includes("}")&&n--,0===n)){o=!1;break}if(!t)throw new Error(`Function ${r} not found`);return t})(e,c),t=(e=>{const r=new Function(`\n        return function() {\n            ${e}\n        };\n    `)();if("function"!=typeof r)throw new Error("The code did not produce a valid function.");return r})((f=r,i.transpileModule(f,{compilerOptions:{module:i.ModuleKind.CommonJS,target:i.ScriptTarget.ES2015,esModuleInterop:!0}}).outputText));a=await(async e=>{console.log("Function passed to getTotalTimeScore:",e);const r=o.performance.now();let t=null;return"AsyncFunction"===e.constructor.name?e().then((()=>(t=o.performance.now(),t-r))):(e(),t=o.performance.now(),Promise.resolve(t-r))})(t),u=await(e=>{const r=o.performance.now(),t=process.memoryUsage().heapUsed;e();const n=process.memoryUsage().heapUsed,i=o.performance.now();return Promise.resolve(s(i-r+(n-t)))})(t)}catch(e){return console.log(e),Promise.reject(new Error("Error evaluating function",e))}return{totalTime:a,totalSpace:u}}catch(e){throw new Error(`Error in function performance analysis: ${e}`)}var f}};
